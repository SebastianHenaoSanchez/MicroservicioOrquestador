/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.JsonApiBodyRequestPersonaDelete;
import io.swagger.model.JsonApiBodyResponseErrors;
import io.swagger.model.JsonApiBodyResponseSuccessNegocio;
import io.swagger.model.JsonApiBodyResponseSuccessOferta;
import io.swagger.model.JsonApiBodyResponseSuccessPersona;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-08-28T17:05:48.141Z")

@Api(value = "eliminar", description = "the eliminar API")
public interface EliminarApi {

    @ApiOperation(value = "eliminar negocio por id", nickname = "eliminarNegociosIdnegocioDelete", notes = "elimina un negocio de acuerdo a su id", response = JsonApiBodyResponseSuccessNegocio.class, tags={ "negocios", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "negocio eliminado", response = JsonApiBodyResponseSuccessNegocio.class),
        @ApiResponse(code = 404, message = "id del negocio no encontrado", response = JsonApiBodyResponseErrors.class) })
    @RequestMapping(value = "/eliminar/negocios/{idnegocio}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<JsonApiBodyResponseSuccessNegocio> eliminarNegociosIdnegocioDelete(@ApiParam(value = "id de negocio a eliminar",required=true) @PathVariable("idnegocio") String idnegocio);


    @ApiOperation(value = "eliminar oferta por id", nickname = "eliminarOfertasIdofertaDelete", notes = "", response = JsonApiBodyResponseSuccessOferta.class, tags={ "ofertas", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "oferta eliminada", response = JsonApiBodyResponseSuccessOferta.class),
        @ApiResponse(code = 404, message = "id oferta no encontrado", response = JsonApiBodyResponseErrors.class) })
    @RequestMapping(value = "/eliminar/ofertas/{idoferta}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<JsonApiBodyResponseSuccessOferta> eliminarOfertasIdofertaDelete(@ApiParam(value = "id de oferta a eliminar",required=true) @PathVariable("idoferta") String idoferta);


    @ApiOperation(value = "eliminar persona", nickname = "eliminarPersonasDelete", notes = "eliminar persona", response = JsonApiBodyResponseSuccessPersona.class, tags={ "personas", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Persona eliminada correctamente", response = JsonApiBodyResponseSuccessPersona.class),
        @ApiResponse(code = 400, message = "Datos incompletos o incorrectos", response = JsonApiBodyResponseErrors.class) })
    @RequestMapping(value = "/eliminar/personas",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.DELETE)
    ResponseEntity<JsonApiBodyResponseSuccessPersona> eliminarPersonasDelete(@ApiParam(value = "body" ,required=true )  @Valid @RequestBody JsonApiBodyRequestPersonaDelete body);

}
